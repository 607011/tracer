var Game;(function(F){let a;(function(o){o[o.None=0]="None",o[o.Splash=1]="Splash",o[o.Play=2]="Play",o[o.Countdown=3]="Countdown",o[o.AnimatePath=4]="AnimatePath",o[o.Paused=5]="Paused",o[o.Help=6]="Help",o[o.Wrong=7]="Wrong",o[o.Won=8]="Won",o[o.Lost=9]="Lost",o[o.Start=10]="Start"})(a||(a={}));const p={N:{dx:0,dy:-1},S:{dx:0,dy:1},E:{dx:1,dy:0},W:{dx:-1,dy:0},NE:{dx:1,dy:-1},NW:{dx:-1,dy:-1},SE:{dx:1,dy:1},SW:{dx:-1,dy:1}};Object.freeze(p);const b={};Object.keys(p).forEach(o=>{const e=p[o];b[`${e.dx},${e.dy}`]=o}),Object.freeze(b);const x={NE:7,E:6,SE:5,S:4,SW:3,W:2,NW:1,N:0};Object.freeze(x);class g extends HTMLElement{constructor(){super(),this.levels=[{width:7,height:5,secsToSolve:30,numStepsRequired:11,numTurnsRequired:6,tileAnimationDurationSecs:1.5,directionProbs:[[.16,.42,.16],[.08,0,.08],[0,0,0]],forbiddenTurns:{NE:["S","W","SW"],NW:["S","E","SE"],SE:["N","W","NW"],SW:["N","E","NE"],N:["SW","SE","S"],E:["NW","SW","W"],S:["NE","NW","N"],W:["NE","SE","E"]},crossingAllowed:!1}],this._levelNum=0,this._state=a.None,this.lastTapTime=0,this._soundEnabled=!0,this.sounds={},this._path=[],this.pathIndex=0,this.t0=performance.now(),this.elapsed=0,this.prelude=!0}connectedCallback(){const e=this.levels[0];this.shadow=this.attachShadow({mode:"open"}),this.dynamicStyles=document.createElement("style"),this.updateDynamicStyles();const s=document.createElement("style");s.textContent=`
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    touch-action: manipulation;
    font-size: calc(var(--cell-size) / 2);
}
#board {
    position: relative;
    margin: 0 auto;
    width: fit-content;
    display: grid;
    grid-template-columns: repeat(var(--tiles-per-row), var(--cell-size));
    grid-template-rows: repeat(--tiles-per-col, var(--cell-size));
    gap: calc(var(--cell-size) / 10);
}
#board.locked > div.tile {
    cursor: not-allowed;
}
#board.wrong > div.tile {
    background-color: var(--wrong-color) !important;
    box-shadow: 0 0 calc(var(--cell-size) / 10) calc(var(--cell-size) / 30) var(--wrong-color) !important;
    cursor: not-allowed;
}
.tile {
    display: block;
    box-sizing: content-box;
    width: var(--cell-size);
    height: var(--cell-size);
    background-color: var(--tile-color);
    border-radius: calc(var(--cell-size) / 30);
    cursor: pointer;
    text-align: center;
    line-height: var(--cell-size);
    transition: background-color 60ms, box-shadow 60ms;
}
.tile.path {
    animation-name: path;
    animation-duration: ${e.tileAnimationDurationSecs}s;
    animation-iteration-count: 1;
    animation-fill-mode: alternate;
    animation-timing-function: cubic-bezier(.32,.36,.04,.96);
}
.tile.visited {
    background-color: var(--visited-color);
    box-shadow: 0 0 calc(var(--cell-size) / 6) calc(var(--cell-size) / 30) var(--visited-color);
}

@keyframes path {
    0% {
        background-color: var(--tile-color);
    }
    50% {
        background-color: var(--path-color);
        box-shadow: 0 0 calc(var(--cell-size) / 7) calc(var(--cell-size) / 30) var(--path-color);
    }
}
`,this.board=document.createElement("div"),this.board.classList.add("locked"),this.board.id="board",this.tiles=Array.from({length:e.height},()=>Array(e.width).fill(null));for(let i=0;i<e.height;++i)for(let l=0;l<e.width;++l){const n=document.createElement("div");n.classList.add("tile"),n.dataset.x=l.toString(),n.dataset.y=i.toString(),this.tiles[i][l]=n}this.board.addEventListener("click",i=>{i.target.classList.contains("tile")&&this.onTileClick(i)}),this.board.replaceChildren(...this.tiles.flat()),this.shadow.appendChild(this.board),this.shadow.appendChild(this.dynamicStyles),this.shadow.appendChild(s),this.activateEventListeners(),this.initAudio(),this.createPath()}updateDynamicStyles(){const e=this.levels[this._levelNum];this.dynamicStyles.textContent=`
:host {
    --cell-size: ${80/Math.max(e.width,e.height)}vmin;
    --tiles-per-row: ${e.width};
    --tiles-per-col: ${e.height};
}
`}adjustSize(){this.updateDynamicStyles()}set levelNum(e){this._levelNum<this.levels.length&&(this._levelNum=e,this.updateDynamicStyles()),this.newGame()}get levelNum(){return this._levelNum}nextLevel(){this.newGame()}static rotateCW(e,s=1){const i=Array.from({length:3},()=>Array(3).fill(0));i[1][1]=e[1][1];for(let l=0;l<s;++l)i[0][2]=e[0][1],i[0][1]=e[0][0],i[2][0]=e[2][1],i[2][1]=e[2][2],i[2][2]=e[1][2],i[1][2]=e[0][2],i[0][0]=e[1][0],i[1][0]=e[2][0],e=i.map(n=>n.slice());return e}animatePath(){const s=this.levels[this._levelNum].tileAnimationDurationSecs/(this._path.length*3);this._path.forEach(({x:i,y:l},n)=>{const c=this.tiles[l][i];c.classList.add("path"),c.style.animationDelay=`${n*s}s`})}createPath(){const e=performance.now(),s=this.levels[this._levelNum],i=["width","height","numStepsRequired","numTurnsRequired","tileAnimationDurationSecs","directionProbs","forbiddenTurns","crossingAllowed"];for(const d of i)d in s||console.error(`Missing required property in level data: ${d}`);let l,n,c,y=0;do{++y,l=[];const d=Array.from({length:s.height},()=>Array(s.width).fill(!1));n={x:Math.floor(Math.random()*s.width),y:s.height-1},d[n.y][n.x]=!0,l.push({...n});let u=["N","E","W"][Math.floor(Math.random()*3)];for(c=0;n.y>0&&(l.length<s.numStepsRequired||c<s.numTurnsRequired);){const D=Object.values(p).map(r=>({x:n.x+r.dx,y:n.y+r.dy})).filter(r=>r.x>=0&&r.x<s.width&&r.y>=0&&r.y<s.height).filter(r=>!d[r.y][r.x]),E=s.crossingAllowed?D:D.filter(r=>{const h=r.x-n.x,w=r.y-n.y;if(h!==0&&w!==0){const m={x:n.x,y:r.y},T={x:r.x,y:n.y};if(d[m.y][m.x]&&d[T.y][T.x])return!1}return!0});let k=g.rotateCW(s.directionProbs.map(r=>r.slice()),x[u]);const L=E.reduce((r,h)=>{const w=h.x-n.x,m=h.y-n.y;return r+k[m+1][w+1]},0);if(L===0||E.length===0)break;const z=Math.random()*L;let S=0,v;for(const r of E){const h=r.x-n.x,w=r.y-n.y,m=k[w+1][h+1];if(S+=m,!(z>=S)){if(v=b[`${h},${w}`],s.forbiddenTurns&&Array.isArray(s.forbiddenTurns[u])&&s.forbiddenTurns[u].includes(v)){S-=m;continue}d[r.y][r.x]=!0;break}}n={x:n.x+p[v].dx,y:n.y+p[v].dy},l.push({...n}),c+=u!==v?1:0,u=v}}while(l.length!==s.numStepsRequired||c!==s.numTurnsRequired||n.y!==0);this._path=l,console.debug(`New path created in ${performance.now()-e}ms after ${y} tries: ${l.map(({x:d,y:u})=>`(${d},${u})`).join(" \u2192 ")}`)}activateEventListeners(){addEventListener("touchstart",e=>this.onTouchStart(e),{passive:!1}),addEventListener("touchend",e=>this.onTouchEnd(e))}newGame(){this.prelude=!0,this.state=a.Start}update(){if(this.prelude||![a.AnimatePath,a.Play,a.Wrong].includes(this._state))return;const e=this.levels[this._levelNum];this.elapsed=.001*(performance.now()-this.t0),dispatchEvent(new CustomEvent("countdown",{detail:Math.max(0,e.secsToSolve-this.elapsed).toFixed(2)})),this.elapsed>e.secsToSolve&&(this.state=a.Lost),this.animationFrameID=requestAnimationFrame(()=>this.update())}set state(e){if(this._state===e)return;this._state=e;const s=this.levels[this._levelNum];switch(e){case a.Start:this.elapsed=0,this.state=a.Countdown,dispatchEvent(new CustomEvent("countdown",{detail:s.secsToSolve.toFixed(2)}));break;case a.Countdown:this.playSound("countdown"),dispatchEvent(new CustomEvent("showcountdown")),this.timeoutID=setTimeout(()=>{this.state=a.AnimatePath},1400);break;case a.AnimatePath:this.pathIndex=0,this.animatePath(),this.timeoutID=setTimeout(()=>{this.state=a.Play},1e3*s.tileAnimationDurationSecs),this.animationFrameID=requestAnimationFrame(()=>this.update());break;case a.Play:this.board.classList.remove("locked"),this.tiles.flat().forEach(i=>i.classList.remove("path")),this.t0=performance.now()-1e3*this.elapsed,this.animationFrameID=requestAnimationFrame(()=>this.update()),this.prelude=!1;break;case a.Wrong:this.playSound("alarm"),this.board.classList.add("wrong"),this.tiles.flat().forEach(i=>i.classList.remove("visited")),this.timeoutID=setTimeout(()=>{this.board.classList.remove("wrong"),.001*(performance.now()-this.t0)<s.secsToSolve&&(this.state=a.Countdown)},1e3*this.sounds.alarm.buffer.duration),this.animationFrameID=requestAnimationFrame(()=>this.update());break;case a.Paused:this.board.classList.add("locked"),dispatchEvent(new CustomEvent("pause")),cancelAnimationFrame(this.animationFrameID);break;case a.Won:this.board.classList.add("locked"),this.playSound("tada"),this.tiles.flat().forEach(i=>i.classList.remove("visited")),this.createPath(),dispatchEvent(new CustomEvent("wonlevel")),cancelAnimationFrame(this.animationFrameID),this.elapsed=0;break;case a.Lost:this.stopAllSounds(),this.playSound("alarm"),this.board.classList.remove("wrong"),this.tiles.flat().forEach(i=>i.classList.remove("visited","path")),this.createPath(),dispatchEvent(new CustomEvent("lostlevel")),clearTimeout(this.timeoutID),cancelAnimationFrame(this.animationFrameID);break;case a.Splash:t.countdown.textContent=s.secsToSolve.toFixed(2);break;default:break}}get state(){return this._state}onTileClick(e){if(e.preventDefault(),e.stopImmediatePropagation(),this._state!==a.Play)return;const s=e.target,i=parseInt(s.dataset.x),l=parseInt(s.dataset.y),n=this.tiles[l][i],c=this._path[this.pathIndex];c.x===i&&c.y===l?(this.playSound("step"),n.classList.add("visited"),++this.pathIndex,this.pathIndex===this._path.length&&(this.state=a.Won)):this.state=a.Wrong}onTouchStart(e){this.touchStartTime=performance.now()}onTouchEnd(e){const s=performance.now();if(s-this.touchStartTime<400){const n=e.changedTouches[0],c=document.elementFromPoint(n.clientX,n.clientY);if(c.classList.contains("tile")){const y=new MouseEvent("click",{bubbles:!0,cancelable:!0,view:window,clientX:n.clientX,clientY:n.clientY}),d=Object.create(y,{target:{value:c},currentTarget:{value:c}});this.onTileClick(d)}}const l=s-this.lastTapTime;l<500&&l>0&&e.preventDefault(),this.lastTapTime=s}set soundEnabled(e){this._soundEnabled=e,localStorage.setItem("tracer-sound-enabled",this.soundEnabled.toString())}get soundEnabled(){return this._soundEnabled}pause(){this.state=a.Paused}unpause(){this.state=a.Play}doPlaySound(e){const s=this.audioCtx.createBufferSource();s.buffer=this.sounds[e].buffer,s.connect(this.gainNode),s.start(),this.sounds[e].source=s}playSound(e){this.soundEnabled&&(this.audioCtx.state==="suspended"?this.resumeAudio().then(()=>{this.doPlaySound(e)}):this.doPlaySound(e))}stopSound(e){this.sounds[e].source&&this.sounds[e].source.stop()}stopAllSounds(){for(const e in this.sounds)this.stopSound(e)}resumeAudio(){return this.audioCtx.resume()}initAudio(){this.audioCtx=new AudioContext,this.gainNode=this.audioCtx.createGain(),this.gainNode.gain.value=parseFloat(localStorage.getItem("tracer-sound-volume")||g.DEFAULT_GAIN_VALUE.toString()),this.gainNode.connect(this.audioCtx.destination);for(const e of["countdown","alarm","step","tada"])this.sounds[e]={},fetch(`static/sounds/${e}.mp3`).then(s=>s.arrayBuffer()).then(s=>this.audioCtx.decodeAudioData(s)).then(s=>{this.sounds[e].buffer=s}).catch(s=>{console.error("Failed to load sound:",s)})}}g.DEFAULT_GAIN_VALUE=.5;let t={};const f=document.location.hostname.startsWith("leuchtspur")?"de":"en";function A(o){switch(o.key){case"Escape":if(t.splash.open)return;switch(t.game.state){case a.Play:t.game.pause();break;case a.Paused:t.game.unpause();break;default:break}break;default:break}o.preventDefault(),o.stopImmediatePropagation()}function N(){return t.splash=document.querySelector(`#splash-screen-${f}`),t.splash.addEventListener("cancel",e=>e.preventDefault()),t.splash.addEventListener("close",()=>{t.game.newGame()}),t.splash.querySelector("button").addEventListener("click",e=>{t.splash.close(),t.game.resumeAudio().then(()=>{t.game.newGame()}),e.stopImmediatePropagation()}),t.splash}function P(){t.won=document.querySelector(`#won-dialog-${f}`),t.won.addEventListener("cancel",e=>e.preventDefault()),t.won.querySelector("button").addEventListener("click",e=>{t.won.close(),t.game.nextLevel(),e.stopImmediatePropagation()}),window.addEventListener("wonlevel",e=>{t.won.showModal()})}function C(){t.lost=document.querySelector(`#lost-dialog-${f}`),t.lost.addEventListener("cancel",e=>e.preventDefault()),t.lost.querySelector("button").addEventListener("click",e=>{t.lost.close(),t.game.newGame(),e.stopImmediatePropagation()}),window.addEventListener("lostlevel",e=>{t.lost.showModal()})}function W(){t.pause=document.querySelector(`#pause-dialog-${f}`),t.pause.querySelector("button").addEventListener("click",e=>{t.pause.close(),t.game.unpause(),e.stopImmediatePropagation()}),window.addEventListener("pause",e=>{t.pause.showModal()})}function I(){t.countdownDialog=document.querySelector("#countdown-dialog"),t.threeTwoOne=t.countdownDialog.querySelector("div>div"),window.addEventListener("showcountdown",()=>{t.countdownDialog.showModal(),t.threeTwoOne.textContent="3",t.threeTwoOne.className="three",setTimeout(()=>{t.threeTwoOne.textContent="2",t.threeTwoOne.className="two"},416),setTimeout(()=>{t.threeTwoOne.textContent="1",t.threeTwoOne.className="one"},832),setTimeout(()=>{t.countdownDialog.close()},1264)})}function q(){t.settingsDialog=document.querySelector("#settings-dialog"),window.addEventListener("showsettings",()=>{t.settingsDialog.showModal()})}function _(){console.info("%cTracer %cstarted.","color: #f33; font-weight: bold","color: initial; font-weight: normal;"),"serviceWorker"in navigator&&navigator.serviceWorker.register("/service-worker.js").then(o=>{console.info(`Service Worker registered with scope "${o.scope}"`)}).catch(o=>{console.error(`Service Worker registration failed: ${o}`)}),customElements.define("tracer-game",g),t.game=document.querySelector("tracer-game"),t.countdown=document.querySelector("#countdown"),addEventListener("countdown",o=>{t.countdown.textContent=o.detail}),document.addEventListener("touchstart",()=>t.game.resumeAudio(),{once:!0}),document.addEventListener("click",()=>t.game.resumeAudio(),{once:!0}),addEventListener("keyup",A),addEventListener("resize",()=>t.game.adjustSize()),I(),q(),P(),C(),W(),N().showModal()}addEventListener("pageshow",_)})(Game||(Game={}));
